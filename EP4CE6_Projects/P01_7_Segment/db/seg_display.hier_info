|seg_display
rst_n => seg_counter:counter_1.rst_n
rst_n => seg_counter:counter_2.rst_n
rst_n => seg_counter:counter_3.rst_n
rst_n => seg_counter:counter_4.rst_n
rst_n => count[0].ACLR
rst_n => count[1].ACLR
rst_n => count[2].ACLR
rst_n => count[3].ACLR
rst_n => count[4].ACLR
rst_n => count[5].ACLR
rst_n => count[6].ACLR
rst_n => count[7].ACLR
rst_n => count[8].ACLR
rst_n => count[9].ACLR
rst_n => count[10].ACLR
rst_n => count[11].ACLR
rst_n => count[12].ACLR
rst_n => count[13].ACLR
rst_n => count[14].ACLR
rst_n => count[15].ACLR
rst_n => shift_reg[0].ACLR
rst_n => shift_reg[1].PRESET
rst_n => shift_reg[2].PRESET
rst_n => shift_reg[3].PRESET
rst_n => digit_index[0].ACLR
rst_n => digit_index[1].ACLR
rst_n => digit_index[2].ACLR
clk => seg_counter:counter_1.clk
clk => digit_index[0].CLK
clk => digit_index[1].CLK
clk => digit_index[2].CLK
clk => shift_reg[0].CLK
clk => shift_reg[1].CLK
clk => shift_reg[2].CLK
clk => shift_reg[3].CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => seg_counter:counter_2.clk
clk => seg_counter:counter_3.clk
clk => seg_counter:counter_4.clk
seg[0] <= seg_rom:rom.data_out[0]
seg[1] <= seg_rom:rom.data_out[1]
seg[2] <= seg_rom:rom.data_out[2]
seg[3] <= seg_rom:rom.data_out[3]
seg[4] <= seg_rom:rom.data_out[4]
seg[5] <= seg_rom:rom.data_out[5]
seg[6] <= seg_rom:rom.data_out[6]
sel[0] <= shift_reg[0].DB_MAX_OUTPUT_PORT_TYPE
sel[1] <= shift_reg[1].DB_MAX_OUTPUT_PORT_TYPE
sel[2] <= shift_reg[2].DB_MAX_OUTPUT_PORT_TYPE
sel[3] <= shift_reg[3].DB_MAX_OUTPUT_PORT_TYPE


|seg_display|seg_counter:counter_1
rst_n => tick.PRESET
rst_n => cnt1[0].ACLR
rst_n => cnt1[1].ACLR
rst_n => cnt1[2].ACLR
rst_n => cnt1[3].ACLR
rst_n => cnt1[4].ACLR
rst_n => cnt1[5].ACLR
rst_n => cnt1[6].ACLR
rst_n => cnt1[7].ACLR
rst_n => cnt1[8].ACLR
rst_n => cnt1[9].ACLR
rst_n => cnt1[10].ACLR
rst_n => cnt1[11].ACLR
rst_n => digit[0].ACLR
rst_n => digit[1].ACLR
rst_n => digit[2].ACLR
rst_n => digit[3].ACLR
rst_n => cnt2[0].ACLR
rst_n => cnt2[1].ACLR
rst_n => cnt2[2].ACLR
rst_n => cnt2[3].ACLR
rst_n => cnt2[4].ACLR
rst_n => cnt2[5].ACLR
rst_n => cnt2[6].ACLR
rst_n => cnt2[7].ACLR
rst_n => cnt2[8].ACLR
rst_n => cnt2[9].ACLR
rst_n => cnt2[10].ACLR
rst_n => cnt2[11].ACLR
rst_n => cnt2[12].ACLR
rst_n => cnt2[13].ACLR
clk => digit[0].CLK
clk => digit[1].CLK
clk => digit[2].CLK
clk => digit[3].CLK
clk => cnt2[0].CLK
clk => cnt2[1].CLK
clk => cnt2[2].CLK
clk => cnt2[3].CLK
clk => cnt2[4].CLK
clk => cnt2[5].CLK
clk => cnt2[6].CLK
clk => cnt2[7].CLK
clk => cnt2[8].CLK
clk => cnt2[9].CLK
clk => cnt2[10].CLK
clk => cnt2[11].CLK
clk => cnt2[12].CLK
clk => cnt2[13].CLK
clk => tick.CLK
clk => cnt1[0].CLK
clk => cnt1[1].CLK
clk => cnt1[2].CLK
clk => cnt1[3].CLK
clk => cnt1[4].CLK
clk => cnt1[5].CLK
clk => cnt1[6].CLK
clk => cnt1[7].CLK
clk => cnt1[8].CLK
clk => cnt1[9].CLK
clk => cnt1[10].CLK
clk => cnt1[11].CLK
digit_out[0] <= digit[0].DB_MAX_OUTPUT_PORT_TYPE
digit_out[1] <= digit[1].DB_MAX_OUTPUT_PORT_TYPE
digit_out[2] <= digit[2].DB_MAX_OUTPUT_PORT_TYPE
digit_out[3] <= digit[3].DB_MAX_OUTPUT_PORT_TYPE


|seg_display|seg_counter:counter_2
rst_n => tick.PRESET
rst_n => cnt1[0].ACLR
rst_n => cnt1[1].ACLR
rst_n => cnt1[2].ACLR
rst_n => cnt1[3].ACLR
rst_n => cnt1[4].ACLR
rst_n => cnt1[5].ACLR
rst_n => cnt1[6].ACLR
rst_n => cnt1[7].ACLR
rst_n => cnt1[8].ACLR
rst_n => cnt1[9].ACLR
rst_n => cnt1[10].ACLR
rst_n => cnt1[11].ACLR
rst_n => digit[0].ACLR
rst_n => digit[1].ACLR
rst_n => digit[2].ACLR
rst_n => digit[3].ACLR
rst_n => cnt2[0].ACLR
rst_n => cnt2[1].ACLR
rst_n => cnt2[2].ACLR
rst_n => cnt2[3].ACLR
rst_n => cnt2[4].ACLR
rst_n => cnt2[5].ACLR
rst_n => cnt2[6].ACLR
rst_n => cnt2[7].ACLR
rst_n => cnt2[8].ACLR
rst_n => cnt2[9].ACLR
rst_n => cnt2[10].ACLR
rst_n => cnt2[11].ACLR
rst_n => cnt2[12].ACLR
rst_n => cnt2[13].ACLR
rst_n => cnt2[14].ACLR
rst_n => cnt2[15].ACLR
rst_n => cnt2[16].ACLR
clk => digit[0].CLK
clk => digit[1].CLK
clk => digit[2].CLK
clk => digit[3].CLK
clk => cnt2[0].CLK
clk => cnt2[1].CLK
clk => cnt2[2].CLK
clk => cnt2[3].CLK
clk => cnt2[4].CLK
clk => cnt2[5].CLK
clk => cnt2[6].CLK
clk => cnt2[7].CLK
clk => cnt2[8].CLK
clk => cnt2[9].CLK
clk => cnt2[10].CLK
clk => cnt2[11].CLK
clk => cnt2[12].CLK
clk => cnt2[13].CLK
clk => cnt2[14].CLK
clk => cnt2[15].CLK
clk => cnt2[16].CLK
clk => tick.CLK
clk => cnt1[0].CLK
clk => cnt1[1].CLK
clk => cnt1[2].CLK
clk => cnt1[3].CLK
clk => cnt1[4].CLK
clk => cnt1[5].CLK
clk => cnt1[6].CLK
clk => cnt1[7].CLK
clk => cnt1[8].CLK
clk => cnt1[9].CLK
clk => cnt1[10].CLK
clk => cnt1[11].CLK
digit_out[0] <= digit[0].DB_MAX_OUTPUT_PORT_TYPE
digit_out[1] <= digit[1].DB_MAX_OUTPUT_PORT_TYPE
digit_out[2] <= digit[2].DB_MAX_OUTPUT_PORT_TYPE
digit_out[3] <= digit[3].DB_MAX_OUTPUT_PORT_TYPE


|seg_display|seg_counter:counter_3
rst_n => cnt2[0].ACLR
rst_n => cnt2[1].ACLR
rst_n => cnt2[2].ACLR
rst_n => cnt2[3].ACLR
rst_n => cnt2[4].ACLR
rst_n => cnt2[5].ACLR
rst_n => cnt2[6].ACLR
rst_n => cnt2[7].ACLR
rst_n => cnt2[8].ACLR
rst_n => cnt2[9].ACLR
rst_n => cnt2[10].ACLR
rst_n => cnt2[11].ACLR
rst_n => cnt2[12].ACLR
rst_n => cnt2[13].ACLR
rst_n => cnt2[14].ACLR
rst_n => cnt2[15].ACLR
rst_n => cnt2[16].ACLR
rst_n => cnt2[17].ACLR
rst_n => cnt2[18].ACLR
rst_n => cnt2[19].ACLR
rst_n => tick.PRESET
rst_n => cnt1[0].ACLR
rst_n => cnt1[1].ACLR
rst_n => cnt1[2].ACLR
rst_n => cnt1[3].ACLR
rst_n => cnt1[4].ACLR
rst_n => cnt1[5].ACLR
rst_n => cnt1[6].ACLR
rst_n => cnt1[7].ACLR
rst_n => cnt1[8].ACLR
rst_n => cnt1[9].ACLR
rst_n => cnt1[10].ACLR
rst_n => cnt1[11].ACLR
rst_n => digit[0].ACLR
rst_n => digit[1].ACLR
rst_n => digit[2].ACLR
rst_n => digit[3].ACLR
clk => digit[0].CLK
clk => digit[1].CLK
clk => digit[2].CLK
clk => digit[3].CLK
clk => cnt2[0].CLK
clk => cnt2[1].CLK
clk => cnt2[2].CLK
clk => cnt2[3].CLK
clk => cnt2[4].CLK
clk => cnt2[5].CLK
clk => cnt2[6].CLK
clk => cnt2[7].CLK
clk => cnt2[8].CLK
clk => cnt2[9].CLK
clk => cnt2[10].CLK
clk => cnt2[11].CLK
clk => cnt2[12].CLK
clk => cnt2[13].CLK
clk => cnt2[14].CLK
clk => cnt2[15].CLK
clk => cnt2[16].CLK
clk => cnt2[17].CLK
clk => cnt2[18].CLK
clk => cnt2[19].CLK
clk => tick.CLK
clk => cnt1[0].CLK
clk => cnt1[1].CLK
clk => cnt1[2].CLK
clk => cnt1[3].CLK
clk => cnt1[4].CLK
clk => cnt1[5].CLK
clk => cnt1[6].CLK
clk => cnt1[7].CLK
clk => cnt1[8].CLK
clk => cnt1[9].CLK
clk => cnt1[10].CLK
clk => cnt1[11].CLK
digit_out[0] <= digit[0].DB_MAX_OUTPUT_PORT_TYPE
digit_out[1] <= digit[1].DB_MAX_OUTPUT_PORT_TYPE
digit_out[2] <= digit[2].DB_MAX_OUTPUT_PORT_TYPE
digit_out[3] <= digit[3].DB_MAX_OUTPUT_PORT_TYPE


|seg_display|seg_counter:counter_4
rst_n => cnt2[0].ACLR
rst_n => cnt2[1].ACLR
rst_n => cnt2[2].ACLR
rst_n => cnt2[3].ACLR
rst_n => cnt2[4].ACLR
rst_n => cnt2[5].ACLR
rst_n => cnt2[6].ACLR
rst_n => cnt2[7].ACLR
rst_n => cnt2[8].ACLR
rst_n => cnt2[9].ACLR
rst_n => cnt2[10].ACLR
rst_n => cnt2[11].ACLR
rst_n => cnt2[12].ACLR
rst_n => cnt2[13].ACLR
rst_n => cnt2[14].ACLR
rst_n => cnt2[15].ACLR
rst_n => cnt2[16].ACLR
rst_n => cnt2[17].ACLR
rst_n => cnt2[18].ACLR
rst_n => cnt2[19].ACLR
rst_n => cnt2[20].ACLR
rst_n => cnt2[21].ACLR
rst_n => cnt2[22].ACLR
rst_n => cnt2[23].ACLR
rst_n => tick.PRESET
rst_n => cnt1[0].ACLR
rst_n => cnt1[1].ACLR
rst_n => cnt1[2].ACLR
rst_n => cnt1[3].ACLR
rst_n => cnt1[4].ACLR
rst_n => cnt1[5].ACLR
rst_n => cnt1[6].ACLR
rst_n => cnt1[7].ACLR
rst_n => cnt1[8].ACLR
rst_n => cnt1[9].ACLR
rst_n => cnt1[10].ACLR
rst_n => cnt1[11].ACLR
rst_n => digit[0].ACLR
rst_n => digit[1].ACLR
rst_n => digit[2].ACLR
rst_n => digit[3].ACLR
clk => digit[0].CLK
clk => digit[1].CLK
clk => digit[2].CLK
clk => digit[3].CLK
clk => cnt2[0].CLK
clk => cnt2[1].CLK
clk => cnt2[2].CLK
clk => cnt2[3].CLK
clk => cnt2[4].CLK
clk => cnt2[5].CLK
clk => cnt2[6].CLK
clk => cnt2[7].CLK
clk => cnt2[8].CLK
clk => cnt2[9].CLK
clk => cnt2[10].CLK
clk => cnt2[11].CLK
clk => cnt2[12].CLK
clk => cnt2[13].CLK
clk => cnt2[14].CLK
clk => cnt2[15].CLK
clk => cnt2[16].CLK
clk => cnt2[17].CLK
clk => cnt2[18].CLK
clk => cnt2[19].CLK
clk => cnt2[20].CLK
clk => cnt2[21].CLK
clk => cnt2[22].CLK
clk => cnt2[23].CLK
clk => tick.CLK
clk => cnt1[0].CLK
clk => cnt1[1].CLK
clk => cnt1[2].CLK
clk => cnt1[3].CLK
clk => cnt1[4].CLK
clk => cnt1[5].CLK
clk => cnt1[6].CLK
clk => cnt1[7].CLK
clk => cnt1[8].CLK
clk => cnt1[9].CLK
clk => cnt1[10].CLK
clk => cnt1[11].CLK
digit_out[0] <= digit[0].DB_MAX_OUTPUT_PORT_TYPE
digit_out[1] <= digit[1].DB_MAX_OUTPUT_PORT_TYPE
digit_out[2] <= digit[2].DB_MAX_OUTPUT_PORT_TYPE
digit_out[3] <= digit[3].DB_MAX_OUTPUT_PORT_TYPE


|seg_display|seg_rom:rom
addr[0] => Mux0.IN19
addr[0] => Mux1.IN19
addr[0] => Mux2.IN10
addr[0] => Mux3.IN19
addr[0] => Mux4.IN10
addr[0] => Mux5.IN10
addr[0] => Mux6.IN19
addr[1] => Mux0.IN18
addr[1] => Mux1.IN18
addr[1] => Mux2.IN9
addr[1] => Mux3.IN18
addr[1] => Mux4.IN9
addr[1] => Mux5.IN9
addr[1] => Mux6.IN18
addr[2] => Mux0.IN17
addr[2] => Mux1.IN17
addr[2] => Mux2.IN8
addr[2] => Mux3.IN17
addr[2] => Mux4.IN8
addr[2] => Mux5.IN8
addr[2] => Mux6.IN17
addr[3] => Mux0.IN16
addr[3] => Mux1.IN16
addr[3] => Mux3.IN16
addr[3] => Mux6.IN16
data_out[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


