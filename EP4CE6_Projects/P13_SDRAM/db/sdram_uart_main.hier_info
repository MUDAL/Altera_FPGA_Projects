|sdram_uart_main
rst_n => button:button_write_sdram.rst_n
rst_n => button:button_read_sdram.rst_n
rst_n => data_source:data_source.rst_n
rst_n => sdram_controller:sdram_controller.rst_n
rst_n => fifo_main:fifo_main.rst_n
rst_n => uart_tx:uart_tx.rst_n
rst_n => pll:pll.areset
clk => pll:pll.inclk0
buttons[0] => button:button_write_sdram.button_in
buttons[1] => button:button_read_sdram.button_in
dq[0] <> sdram_controller:sdram_controller.dq[0]
dq[1] <> sdram_controller:sdram_controller.dq[1]
dq[2] <> sdram_controller:sdram_controller.dq[2]
dq[3] <> sdram_controller:sdram_controller.dq[3]
dq[4] <> sdram_controller:sdram_controller.dq[4]
dq[5] <> sdram_controller:sdram_controller.dq[5]
dq[6] <> sdram_controller:sdram_controller.dq[6]
dq[7] <> sdram_controller:sdram_controller.dq[7]
dq[8] <> sdram_controller:sdram_controller.dq[8]
dq[9] <> sdram_controller:sdram_controller.dq[9]
dq[10] <> sdram_controller:sdram_controller.dq[10]
dq[11] <> sdram_controller:sdram_controller.dq[11]
dq[12] <> sdram_controller:sdram_controller.dq[12]
dq[13] <> sdram_controller:sdram_controller.dq[13]
dq[14] <> sdram_controller:sdram_controller.dq[14]
dq[15] <> sdram_controller:sdram_controller.dq[15]
sclk <= sdram_controller:sdram_controller.sclk
cke <= sdram_controller:sdram_controller.cke
cs_n <= sdram_controller:sdram_controller.cs_n
ras_n <= sdram_controller:sdram_controller.ras_n
cas_n <= sdram_controller:sdram_controller.cas_n
we_n <= sdram_controller:sdram_controller.we_n
addr[0] <= sdram_controller:sdram_controller.addr[0]
addr[1] <= sdram_controller:sdram_controller.addr[1]
addr[2] <= sdram_controller:sdram_controller.addr[2]
addr[3] <= sdram_controller:sdram_controller.addr[3]
addr[4] <= sdram_controller:sdram_controller.addr[4]
addr[5] <= sdram_controller:sdram_controller.addr[5]
addr[6] <= sdram_controller:sdram_controller.addr[6]
addr[7] <= sdram_controller:sdram_controller.addr[7]
addr[8] <= sdram_controller:sdram_controller.addr[8]
addr[9] <= sdram_controller:sdram_controller.addr[9]
addr[10] <= sdram_controller:sdram_controller.addr[10]
addr[11] <= sdram_controller:sdram_controller.addr[11]
bank[0] <= sdram_controller:sdram_controller.bank[0]
bank[1] <= sdram_controller:sdram_controller.bank[1]
udqm <= sdram_controller:sdram_controller.udqm
ldqm <= sdram_controller:sdram_controller.ldqm
uart_out <= uart_tx:uart_tx.data_out


|sdram_uart_main|pll:pll
areset => altpll:altpll_component.areset
inclk0 => altpll:altpll_component.inclk[0]
c0 <= altpll:altpll_component.clk[0]
locked <= altpll:altpll_component.locked


|sdram_uart_main|pll:pll|altpll:altpll_component
inclk[0] => pll_altpll:auto_generated.inclk[0]
inclk[1] => pll_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => pll_altpll:auto_generated.areset
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= pll_altpll:auto_generated.locked
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|sdram_uart_main|pll:pll|altpll:altpll_component|pll_altpll:auto_generated
areset => pll_lock_sync.ACLR
areset => pll1.ARESET
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1
locked <= locked.DB_MAX_OUTPUT_PORT_TYPE


|sdram_uart_main|button:button_write_sdram
rst_n => debounced_reg.ACLR
rst_n => button_in_reg.PRESET
rst_n => count_reg[0].ACLR
rst_n => count_reg[1].ACLR
rst_n => count_reg[2].ACLR
rst_n => count_reg[3].ACLR
rst_n => count_reg[4].ACLR
rst_n => count_reg[5].ACLR
rst_n => count_reg[6].ACLR
rst_n => count_reg[7].ACLR
rst_n => count_reg[8].ACLR
rst_n => count_reg[9].ACLR
rst_n => count_reg[10].ACLR
rst_n => count_reg[11].ACLR
rst_n => count_reg[12].ACLR
rst_n => count_reg[13].ACLR
rst_n => count_reg[14].ACLR
rst_n => count_reg[15].ACLR
rst_n => count_reg[16].ACLR
rst_n => count_reg[17].ACLR
rst_n => count_reg[18].ACLR
rst_n => state~3.DATAIN
clk => debounced_reg.CLK
clk => button_in_reg.CLK
clk => count_reg[0].CLK
clk => count_reg[1].CLK
clk => count_reg[2].CLK
clk => count_reg[3].CLK
clk => count_reg[4].CLK
clk => count_reg[5].CLK
clk => count_reg[6].CLK
clk => count_reg[7].CLK
clk => count_reg[8].CLK
clk => count_reg[9].CLK
clk => count_reg[10].CLK
clk => count_reg[11].CLK
clk => count_reg[12].CLK
clk => count_reg[13].CLK
clk => count_reg[14].CLK
clk => count_reg[15].CLK
clk => count_reg[16].CLK
clk => count_reg[17].CLK
clk => count_reg[18].CLK
clk => state~1.DATAIN
button_in => button_in_reg.DATAIN
single_press <= single_press.DB_MAX_OUTPUT_PORT_TYPE


|sdram_uart_main|button:button_read_sdram
rst_n => debounced_reg.ACLR
rst_n => button_in_reg.PRESET
rst_n => count_reg[0].ACLR
rst_n => count_reg[1].ACLR
rst_n => count_reg[2].ACLR
rst_n => count_reg[3].ACLR
rst_n => count_reg[4].ACLR
rst_n => count_reg[5].ACLR
rst_n => count_reg[6].ACLR
rst_n => count_reg[7].ACLR
rst_n => count_reg[8].ACLR
rst_n => count_reg[9].ACLR
rst_n => count_reg[10].ACLR
rst_n => count_reg[11].ACLR
rst_n => count_reg[12].ACLR
rst_n => count_reg[13].ACLR
rst_n => count_reg[14].ACLR
rst_n => count_reg[15].ACLR
rst_n => count_reg[16].ACLR
rst_n => count_reg[17].ACLR
rst_n => count_reg[18].ACLR
rst_n => state~3.DATAIN
clk => debounced_reg.CLK
clk => button_in_reg.CLK
clk => count_reg[0].CLK
clk => count_reg[1].CLK
clk => count_reg[2].CLK
clk => count_reg[3].CLK
clk => count_reg[4].CLK
clk => count_reg[5].CLK
clk => count_reg[6].CLK
clk => count_reg[7].CLK
clk => count_reg[8].CLK
clk => count_reg[9].CLK
clk => count_reg[10].CLK
clk => count_reg[11].CLK
clk => count_reg[12].CLK
clk => count_reg[13].CLK
clk => count_reg[14].CLK
clk => count_reg[15].CLK
clk => count_reg[16].CLK
clk => count_reg[17].CLK
clk => count_reg[18].CLK
clk => state~1.DATAIN
button_in => button_in_reg.DATAIN
single_press <= single_press.DB_MAX_OUTPUT_PORT_TYPE


|sdram_uart_main|data_source:data_source
rst_n => addr_reg[0].ACLR
rst_n => addr_reg[1].ACLR
rst_n => addr_reg[2].ACLR
rst_n => addr_reg[3].ACLR
rst_n => addr_reg[4].ACLR
rst_n => addr_reg[5].ACLR
clk => addr_reg[0].CLK
clk => addr_reg[1].CLK
clk => addr_reg[2].CLK
clk => addr_reg[3].CLK
clk => addr_reg[4].CLK
clk => addr_reg[5].CLK
read_enable => addr_reg[5].ENA
read_enable => addr_reg[4].ENA
read_enable => addr_reg[3].ENA
read_enable => addr_reg[2].ENA
read_enable => addr_reg[1].ENA
read_enable => addr_reg[0].ENA
data_out[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= <GND>
data_out[8] <= <GND>
data_out[9] <= <GND>
data_out[10] <= <GND>
data_out[11] <= <GND>
data_out[12] <= <GND>
data_out[13] <= <GND>
data_out[14] <= <GND>
data_out[15] <= <GND>


|sdram_uart_main|sdram_controller:sdram_controller
rst_n => cas_shift_reg[0].ACLR
rst_n => cas_shift_reg[1].ACLR
rst_n => rx_enable_reg.ACLR
rst_n => tx_enable_reg.ACLR
rst_n => refresh_twice_reg.ACLR
rst_n => init_done_reg.ACLR
rst_n => refresh_count_reg[0].ACLR
rst_n => refresh_count_reg[1].ACLR
rst_n => refresh_count_reg[2].ACLR
rst_n => refresh_count_reg[3].ACLR
rst_n => refresh_count_reg[4].ACLR
rst_n => refresh_count_reg[5].ACLR
rst_n => refresh_count_reg[6].ACLR
rst_n => refresh_count_reg[7].ACLR
rst_n => refresh_count_reg[8].ACLR
rst_n => refresh_count_reg[9].ACLR
rst_n => refresh_count_reg[10].ACLR
rst_n => delay_count_reg[0].ACLR
rst_n => delay_count_reg[1].ACLR
rst_n => delay_count_reg[2].ACLR
rst_n => delay_count_reg[3].ACLR
rst_n => delay_count_reg[4].ACLR
rst_n => delay_count_reg[5].ACLR
rst_n => delay_count_reg[6].ACLR
rst_n => delay_count_reg[7].ACLR
rst_n => delay_count_reg[8].ACLR
rst_n => delay_count_reg[9].ACLR
rst_n => delay_count_reg[10].ACLR
rst_n => delay_count_reg[11].ACLR
rst_n => delay_count_reg[12].ACLR
rst_n => delay_count_reg[13].ACLR
rst_n => delay_count_reg[14].ACLR
rst_n => delay_count_reg[15].ACLR
rst_n => addr_reg[0].ACLR
rst_n => addr_reg[1].ACLR
rst_n => addr_reg[2].ACLR
rst_n => addr_reg[3].ACLR
rst_n => addr_reg[4].ACLR
rst_n => addr_reg[5].ACLR
rst_n => addr_reg[6].ACLR
rst_n => addr_reg[7].ACLR
rst_n => addr_reg[8].ACLR
rst_n => addr_reg[9].ACLR
rst_n => addr_reg[10].ACLR
rst_n => addr_reg[11].ACLR
rst_n => cols_read_reg[0].ACLR
rst_n => cols_read_reg[1].ACLR
rst_n => cols_read_reg[2].ACLR
rst_n => cols_read_reg[3].ACLR
rst_n => cols_written_reg[0].ACLR
rst_n => cols_written_reg[1].ACLR
rst_n => cols_written_reg[2].ACLR
rst_n => cols_written_reg[3].ACLR
rst_n => rows_read_reg[0].ACLR
rst_n => rows_read_reg[1].ACLR
rst_n => rows_read_reg[2].ACLR
rst_n => rows_written_reg[0].ACLR
rst_n => rows_written_reg[1].ACLR
rst_n => rows_written_reg[2].ACLR
rst_n => command_reg[0].PRESET
rst_n => command_reg[1].PRESET
rst_n => command_reg[2].PRESET
rst_n => old_state_reg~3.DATAIN
rst_n => state~3.DATAIN
clk => cas_shift_reg[0].CLK
clk => cas_shift_reg[1].CLK
clk => rx_enable_reg.CLK
clk => tx_enable_reg.CLK
clk => refresh_twice_reg.CLK
clk => init_done_reg.CLK
clk => refresh_count_reg[0].CLK
clk => refresh_count_reg[1].CLK
clk => refresh_count_reg[2].CLK
clk => refresh_count_reg[3].CLK
clk => refresh_count_reg[4].CLK
clk => refresh_count_reg[5].CLK
clk => refresh_count_reg[6].CLK
clk => refresh_count_reg[7].CLK
clk => refresh_count_reg[8].CLK
clk => refresh_count_reg[9].CLK
clk => refresh_count_reg[10].CLK
clk => delay_count_reg[0].CLK
clk => delay_count_reg[1].CLK
clk => delay_count_reg[2].CLK
clk => delay_count_reg[3].CLK
clk => delay_count_reg[4].CLK
clk => delay_count_reg[5].CLK
clk => delay_count_reg[6].CLK
clk => delay_count_reg[7].CLK
clk => delay_count_reg[8].CLK
clk => delay_count_reg[9].CLK
clk => delay_count_reg[10].CLK
clk => delay_count_reg[11].CLK
clk => delay_count_reg[12].CLK
clk => delay_count_reg[13].CLK
clk => delay_count_reg[14].CLK
clk => delay_count_reg[15].CLK
clk => addr_reg[0].CLK
clk => addr_reg[1].CLK
clk => addr_reg[2].CLK
clk => addr_reg[3].CLK
clk => addr_reg[4].CLK
clk => addr_reg[5].CLK
clk => addr_reg[6].CLK
clk => addr_reg[7].CLK
clk => addr_reg[8].CLK
clk => addr_reg[9].CLK
clk => addr_reg[10].CLK
clk => addr_reg[11].CLK
clk => cols_read_reg[0].CLK
clk => cols_read_reg[1].CLK
clk => cols_read_reg[2].CLK
clk => cols_read_reg[3].CLK
clk => cols_written_reg[0].CLK
clk => cols_written_reg[1].CLK
clk => cols_written_reg[2].CLK
clk => cols_written_reg[3].CLK
clk => rows_read_reg[0].CLK
clk => rows_read_reg[1].CLK
clk => rows_read_reg[2].CLK
clk => rows_written_reg[0].CLK
clk => rows_written_reg[1].CLK
clk => rows_written_reg[2].CLK
clk => command_reg[0].CLK
clk => command_reg[1].CLK
clk => command_reg[2].CLK
clk => sclk.DATAIN
clk => old_state_reg~1.DATAIN
clk => state~1.DATAIN
start => next_state.DATAB
start => Selector0.IN1
enable_write_mode => combinational_logic.IN1
enable_read_mode => combinational_logic.IN1
incoming_data[0] => dq[0].DATAIN
incoming_data[1] => dq[1].DATAIN
incoming_data[2] => dq[2].DATAIN
incoming_data[3] => dq[3].DATAIN
incoming_data[4] => dq[4].DATAIN
incoming_data[5] => dq[5].DATAIN
incoming_data[6] => dq[6].DATAIN
incoming_data[7] => dq[7].DATAIN
incoming_data[8] => dq[8].DATAIN
incoming_data[9] => dq[9].DATAIN
incoming_data[10] => dq[10].DATAIN
incoming_data[11] => dq[11].DATAIN
incoming_data[12] => dq[12].DATAIN
incoming_data[13] => dq[13].DATAIN
incoming_data[14] => dq[14].DATAIN
incoming_data[15] => dq[15].DATAIN
outgoing_data[0] <= outgoing_data.DB_MAX_OUTPUT_PORT_TYPE
outgoing_data[1] <= outgoing_data.DB_MAX_OUTPUT_PORT_TYPE
outgoing_data[2] <= outgoing_data.DB_MAX_OUTPUT_PORT_TYPE
outgoing_data[3] <= outgoing_data.DB_MAX_OUTPUT_PORT_TYPE
outgoing_data[4] <= outgoing_data.DB_MAX_OUTPUT_PORT_TYPE
outgoing_data[5] <= outgoing_data.DB_MAX_OUTPUT_PORT_TYPE
outgoing_data[6] <= outgoing_data.DB_MAX_OUTPUT_PORT_TYPE
outgoing_data[7] <= outgoing_data.DB_MAX_OUTPUT_PORT_TYPE
outgoing_data[8] <= outgoing_data.DB_MAX_OUTPUT_PORT_TYPE
outgoing_data[9] <= outgoing_data.DB_MAX_OUTPUT_PORT_TYPE
outgoing_data[10] <= outgoing_data.DB_MAX_OUTPUT_PORT_TYPE
outgoing_data[11] <= outgoing_data.DB_MAX_OUTPUT_PORT_TYPE
outgoing_data[12] <= outgoing_data.DB_MAX_OUTPUT_PORT_TYPE
outgoing_data[13] <= outgoing_data.DB_MAX_OUTPUT_PORT_TYPE
outgoing_data[14] <= outgoing_data.DB_MAX_OUTPUT_PORT_TYPE
outgoing_data[15] <= outgoing_data.DB_MAX_OUTPUT_PORT_TYPE
enable_transmitter <= tx_enable_reg.DB_MAX_OUTPUT_PORT_TYPE
enable_receiver <= rx_enable_reg.DB_MAX_OUTPUT_PORT_TYPE
dq[0] <> dq[0]
dq[1] <> dq[1]
dq[2] <> dq[2]
dq[3] <> dq[3]
dq[4] <> dq[4]
dq[5] <> dq[5]
dq[6] <> dq[6]
dq[7] <> dq[7]
dq[8] <> dq[8]
dq[9] <> dq[9]
dq[10] <> dq[10]
dq[11] <> dq[11]
dq[12] <> dq[12]
dq[13] <> dq[13]
dq[14] <> dq[14]
dq[15] <> dq[15]
sclk <= clk.DB_MAX_OUTPUT_PORT_TYPE
cke <= <VCC>
cs_n <= <GND>
ras_n <= command_reg[2].DB_MAX_OUTPUT_PORT_TYPE
cas_n <= command_reg[1].DB_MAX_OUTPUT_PORT_TYPE
we_n <= command_reg[0].DB_MAX_OUTPUT_PORT_TYPE
addr[0] <= addr_reg[0].DB_MAX_OUTPUT_PORT_TYPE
addr[1] <= addr_reg[1].DB_MAX_OUTPUT_PORT_TYPE
addr[2] <= addr_reg[2].DB_MAX_OUTPUT_PORT_TYPE
addr[3] <= addr_reg[3].DB_MAX_OUTPUT_PORT_TYPE
addr[4] <= addr_reg[4].DB_MAX_OUTPUT_PORT_TYPE
addr[5] <= addr_reg[5].DB_MAX_OUTPUT_PORT_TYPE
addr[6] <= addr_reg[6].DB_MAX_OUTPUT_PORT_TYPE
addr[7] <= addr_reg[7].DB_MAX_OUTPUT_PORT_TYPE
addr[8] <= addr_reg[8].DB_MAX_OUTPUT_PORT_TYPE
addr[9] <= addr_reg[9].DB_MAX_OUTPUT_PORT_TYPE
addr[10] <= addr_reg[10].DB_MAX_OUTPUT_PORT_TYPE
addr[11] <= addr_reg[11].DB_MAX_OUTPUT_PORT_TYPE
bank[0] <= <GND>
bank[1] <= <GND>
udqm <= <GND>
ldqm <= <GND>


|sdram_uart_main|fifo_main:fifo_main
rst_n => fifo_control:fifo_control.rst_n
rst_n => state~3.DATAIN
clk => fifo_control:fifo_control.clk
clk => fifo_ram:fifo_ram.clk
clk => state~1.DATAIN
writer_valid => output_logic.IN1
writer_valid => fifo_control:fifo_control.writer_valid
reader_ready => fifo_control:fifo_control.reader_ready
data_in[0] => fifo_ram:fifo_ram.data_in[0]
data_in[1] => fifo_ram:fifo_ram.data_in[1]
data_in[2] => fifo_ram:fifo_ram.data_in[2]
data_in[3] => fifo_ram:fifo_ram.data_in[3]
data_in[4] => fifo_ram:fifo_ram.data_in[4]
data_in[5] => fifo_ram:fifo_ram.data_in[5]
data_in[6] => fifo_ram:fifo_ram.data_in[6]
data_in[7] => fifo_ram:fifo_ram.data_in[7]
data_in[8] => fifo_ram:fifo_ram.data_in[8]
data_in[9] => fifo_ram:fifo_ram.data_in[9]
data_in[10] => fifo_ram:fifo_ram.data_in[10]
data_in[11] => fifo_ram:fifo_ram.data_in[11]
data_in[12] => fifo_ram:fifo_ram.data_in[12]
data_in[13] => fifo_ram:fifo_ram.data_in[13]
data_in[14] => fifo_ram:fifo_ram.data_in[14]
data_in[15] => fifo_ram:fifo_ram.data_in[15]
data_out[0] <= fifo_ram:fifo_ram.data_out[0]
data_out[1] <= fifo_ram:fifo_ram.data_out[1]
data_out[2] <= fifo_ram:fifo_ram.data_out[2]
data_out[3] <= fifo_ram:fifo_ram.data_out[3]
data_out[4] <= fifo_ram:fifo_ram.data_out[4]
data_out[5] <= fifo_ram:fifo_ram.data_out[5]
data_out[6] <= fifo_ram:fifo_ram.data_out[6]
data_out[7] <= fifo_ram:fifo_ram.data_out[7]
data_out[8] <= fifo_ram:fifo_ram.data_out[8]
data_out[9] <= fifo_ram:fifo_ram.data_out[9]
data_out[10] <= fifo_ram:fifo_ram.data_out[10]
data_out[11] <= fifo_ram:fifo_ram.data_out[11]
data_out[12] <= fifo_ram:fifo_ram.data_out[12]
data_out[13] <= fifo_ram:fifo_ram.data_out[13]
data_out[14] <= fifo_ram:fifo_ram.data_out[14]
data_out[15] <= fifo_ram:fifo_ram.data_out[15]
enable_reader <= enable_reader.DB_MAX_OUTPUT_PORT_TYPE


|sdram_uart_main|fifo_main:fifo_main|fifo_control:fifo_control
rst_n => r_ptr_reg[0].ACLR
rst_n => r_ptr_reg[1].ACLR
rst_n => r_ptr_reg[2].ACLR
rst_n => r_ptr_reg[3].ACLR
rst_n => r_ptr_reg[4].ACLR
rst_n => w_ptr_reg[0].ACLR
rst_n => w_ptr_reg[1].ACLR
rst_n => w_ptr_reg[2].ACLR
rst_n => w_ptr_reg[3].ACLR
rst_n => w_ptr_reg[4].ACLR
clk => r_ptr_reg[0].CLK
clk => r_ptr_reg[1].CLK
clk => r_ptr_reg[2].CLK
clk => r_ptr_reg[3].CLK
clk => r_ptr_reg[4].CLK
clk => w_ptr_reg[0].CLK
clk => w_ptr_reg[1].CLK
clk => w_ptr_reg[2].CLK
clk => w_ptr_reg[3].CLK
clk => w_ptr_reg[4].CLK
writer_valid => w_ptr_next.IN1
reader_ready => r_ptr_next.IN1
write_addr[0] <= w_ptr_reg[0].DB_MAX_OUTPUT_PORT_TYPE
write_addr[1] <= w_ptr_reg[1].DB_MAX_OUTPUT_PORT_TYPE
write_addr[2] <= w_ptr_reg[2].DB_MAX_OUTPUT_PORT_TYPE
write_addr[3] <= w_ptr_reg[3].DB_MAX_OUTPUT_PORT_TYPE
read_addr[0] <= r_ptr_reg[0].DB_MAX_OUTPUT_PORT_TYPE
read_addr[1] <= r_ptr_reg[1].DB_MAX_OUTPUT_PORT_TYPE
read_addr[2] <= r_ptr_reg[2].DB_MAX_OUTPUT_PORT_TYPE
read_addr[3] <= r_ptr_reg[3].DB_MAX_OUTPUT_PORT_TYPE
fifo_full <= full.DB_MAX_OUTPUT_PORT_TYPE
fifo_empty <= Equal1.DB_MAX_OUTPUT_PORT_TYPE


|sdram_uart_main|fifo_main:fifo_main|fifo_ram:fifo_ram
clk => ram~20.CLK
clk => ram~0.CLK
clk => ram~1.CLK
clk => ram~2.CLK
clk => ram~3.CLK
clk => ram~4.CLK
clk => ram~5.CLK
clk => ram~6.CLK
clk => ram~7.CLK
clk => ram~8.CLK
clk => ram~9.CLK
clk => ram~10.CLK
clk => ram~11.CLK
clk => ram~12.CLK
clk => ram~13.CLK
clk => ram~14.CLK
clk => ram~15.CLK
clk => ram~16.CLK
clk => ram~17.CLK
clk => ram~18.CLK
clk => ram~19.CLK
clk => data_out[0]~reg0.CLK
clk => data_out[1]~reg0.CLK
clk => data_out[2]~reg0.CLK
clk => data_out[3]~reg0.CLK
clk => data_out[4]~reg0.CLK
clk => data_out[5]~reg0.CLK
clk => data_out[6]~reg0.CLK
clk => data_out[7]~reg0.CLK
clk => data_out[8]~reg0.CLK
clk => data_out[9]~reg0.CLK
clk => data_out[10]~reg0.CLK
clk => data_out[11]~reg0.CLK
clk => data_out[12]~reg0.CLK
clk => data_out[13]~reg0.CLK
clk => data_out[14]~reg0.CLK
clk => data_out[15]~reg0.CLK
clk => ram.CLK0
write_enable => ram~20.DATAIN
write_enable => ram.WE
write_addr[0] => ram~3.DATAIN
write_addr[0] => ram.WADDR
write_addr[1] => ram~2.DATAIN
write_addr[1] => ram.WADDR1
write_addr[2] => ram~1.DATAIN
write_addr[2] => ram.WADDR2
write_addr[3] => ram~0.DATAIN
write_addr[3] => ram.WADDR3
read_addr[0] => ram.RADDR
read_addr[1] => ram.RADDR1
read_addr[2] => ram.RADDR2
read_addr[3] => ram.RADDR3
data_in[0] => ram~19.DATAIN
data_in[0] => ram.DATAIN
data_in[1] => ram~18.DATAIN
data_in[1] => ram.DATAIN1
data_in[2] => ram~17.DATAIN
data_in[2] => ram.DATAIN2
data_in[3] => ram~16.DATAIN
data_in[3] => ram.DATAIN3
data_in[4] => ram~15.DATAIN
data_in[4] => ram.DATAIN4
data_in[5] => ram~14.DATAIN
data_in[5] => ram.DATAIN5
data_in[6] => ram~13.DATAIN
data_in[6] => ram.DATAIN6
data_in[7] => ram~12.DATAIN
data_in[7] => ram.DATAIN7
data_in[8] => ram~11.DATAIN
data_in[8] => ram.DATAIN8
data_in[9] => ram~10.DATAIN
data_in[9] => ram.DATAIN9
data_in[10] => ram~9.DATAIN
data_in[10] => ram.DATAIN10
data_in[11] => ram~8.DATAIN
data_in[11] => ram.DATAIN11
data_in[12] => ram~7.DATAIN
data_in[12] => ram.DATAIN12
data_in[13] => ram~6.DATAIN
data_in[13] => ram.DATAIN13
data_in[14] => ram~5.DATAIN
data_in[14] => ram.DATAIN14
data_in[15] => ram~4.DATAIN
data_in[15] => ram.DATAIN15
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[8] <= data_out[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[9] <= data_out[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[10] <= data_out[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[11] <= data_out[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[12] <= data_out[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[13] <= data_out[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[14] <= data_out[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[15] <= data_out[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|sdram_uart_main|uart_tx:uart_tx
rst_n => data_out_reg.PRESET
rst_n => index_reg[0].ACLR
rst_n => index_reg[1].ACLR
rst_n => index_reg[2].ACLR
rst_n => index_reg[3].ACLR
rst_n => clks_count_reg[0].ACLR
rst_n => clks_count_reg[1].ACLR
rst_n => clks_count_reg[2].ACLR
rst_n => clks_count_reg[3].ACLR
rst_n => clks_count_reg[4].ACLR
rst_n => clks_count_reg[5].ACLR
rst_n => clks_count_reg[6].ACLR
rst_n => clks_count_reg[7].ACLR
rst_n => clks_count_reg[8].ACLR
rst_n => clks_count_reg[9].ACLR
rst_n => clks_count_reg[10].ACLR
rst_n => clks_count_reg[11].ACLR
rst_n => clks_count_reg[12].ACLR
rst_n => clks_count_reg[13].ACLR
rst_n => uart_frame_reg[0].PRESET
rst_n => uart_frame_reg[1].PRESET
rst_n => uart_frame_reg[2].PRESET
rst_n => uart_frame_reg[3].PRESET
rst_n => uart_frame_reg[4].PRESET
rst_n => uart_frame_reg[5].PRESET
rst_n => uart_frame_reg[6].PRESET
rst_n => uart_frame_reg[7].PRESET
rst_n => uart_frame_reg[8].PRESET
rst_n => uart_frame_reg[9].PRESET
rst_n => data_in_reg[0].ACLR
rst_n => data_in_reg[1].ACLR
rst_n => data_in_reg[2].ACLR
rst_n => data_in_reg[3].ACLR
rst_n => data_in_reg[4].ACLR
rst_n => data_in_reg[5].ACLR
rst_n => data_in_reg[6].ACLR
rst_n => data_in_reg[7].ACLR
rst_n => state~3.DATAIN
clk => data_out_reg.CLK
clk => index_reg[0].CLK
clk => index_reg[1].CLK
clk => index_reg[2].CLK
clk => index_reg[3].CLK
clk => clks_count_reg[0].CLK
clk => clks_count_reg[1].CLK
clk => clks_count_reg[2].CLK
clk => clks_count_reg[3].CLK
clk => clks_count_reg[4].CLK
clk => clks_count_reg[5].CLK
clk => clks_count_reg[6].CLK
clk => clks_count_reg[7].CLK
clk => clks_count_reg[8].CLK
clk => clks_count_reg[9].CLK
clk => clks_count_reg[10].CLK
clk => clks_count_reg[11].CLK
clk => clks_count_reg[12].CLK
clk => clks_count_reg[13].CLK
clk => uart_frame_reg[0].CLK
clk => uart_frame_reg[1].CLK
clk => uart_frame_reg[2].CLK
clk => uart_frame_reg[3].CLK
clk => uart_frame_reg[4].CLK
clk => uart_frame_reg[5].CLK
clk => uart_frame_reg[6].CLK
clk => uart_frame_reg[7].CLK
clk => uart_frame_reg[8].CLK
clk => uart_frame_reg[9].CLK
clk => data_in_reg[0].CLK
clk => data_in_reg[1].CLK
clk => data_in_reg[2].CLK
clk => data_in_reg[3].CLK
clk => data_in_reg[4].CLK
clk => data_in_reg[5].CLK
clk => data_in_reg[6].CLK
clk => data_in_reg[7].CLK
clk => state~1.DATAIN
enable_uart => next_state.OUTPUTSELECT
enable_uart => next_state.OUTPUTSELECT
enable_uart => next_state.OUTPUTSELECT
enable_uart => index_next.OUTPUTSELECT
enable_uart => index_next.OUTPUTSELECT
enable_uart => index_next.OUTPUTSELECT
enable_uart => index_next.OUTPUTSELECT
enable_uart => data_in_next.IN0
data_in[0] => data_in_reg[0].DATAIN
data_in[1] => data_in_reg[1].DATAIN
data_in[2] => data_in_reg[2].DATAIN
data_in[3] => data_in_reg[3].DATAIN
data_in[4] => data_in_reg[4].DATAIN
data_in[5] => data_in_reg[5].DATAIN
data_in[6] => data_in_reg[6].DATAIN
data_in[7] => data_in_reg[7].DATAIN
data_out <= data_out_reg.DB_MAX_OUTPUT_PORT_TYPE
ready <= ready.DB_MAX_OUTPUT_PORT_TYPE


