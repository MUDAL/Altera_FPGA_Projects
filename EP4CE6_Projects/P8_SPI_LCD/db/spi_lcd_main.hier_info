|spi_lcd_main
rst_n => spi_receiver:spi_interface.rst_n
rst_n => lcd_driver:lcd_module.rst_n
clk => spi_receiver:spi_interface.clk
clk => lcd_driver:lcd_module.clk
mosi => spi_receiver:spi_interface.mosi
sck => spi_receiver:spi_interface.sck
cs => spi_receiver:spi_interface.cs
rw << lcd_driver:lcd_module.rw
rs << lcd_driver:lcd_module.rs
en << lcd_driver:lcd_module.en
db[0] << lcd_driver:lcd_module.db[0]
db[1] << lcd_driver:lcd_module.db[1]
db[2] << lcd_driver:lcd_module.db[2]
db[3] << lcd_driver:lcd_module.db[3]
db[4] << lcd_driver:lcd_module.db[4]
db[5] << lcd_driver:lcd_module.db[5]
db[6] << lcd_driver:lcd_module.db[6]
db[7] << lcd_driver:lcd_module.db[7]


|spi_lcd_main|spi_receiver:spi_interface
rst_n => done_reg.ACLR
rst_n => data_reg[0].ACLR
rst_n => data_reg[1].ACLR
rst_n => data_reg[2].ACLR
rst_n => data_reg[3].ACLR
rst_n => data_reg[4].ACLR
rst_n => data_reg[5].ACLR
rst_n => data_reg[6].ACLR
rst_n => data_reg[7].ACLR
rst_n => data_reg[8].ACLR
rst_n => data_reg[9].ACLR
rst_n => cs_reg.PRESET
rst_n => sck_reg.ACLR
rst_n => mosi_reg.ACLR
rst_n => index_reg[0].PRESET
rst_n => index_reg[1].PRESET
rst_n => index_reg[2].PRESET
rst_n => index_reg[3].PRESET
rst_n => state~3.DATAIN
clk => done_reg.CLK
clk => data_reg[0].CLK
clk => data_reg[1].CLK
clk => data_reg[2].CLK
clk => data_reg[3].CLK
clk => data_reg[4].CLK
clk => data_reg[5].CLK
clk => data_reg[6].CLK
clk => data_reg[7].CLK
clk => data_reg[8].CLK
clk => data_reg[9].CLK
clk => cs_reg.CLK
clk => sck_reg.CLK
clk => mosi_reg.CLK
clk => index_reg[0].CLK
clk => index_reg[1].CLK
clk => index_reg[2].CLK
clk => index_reg[3].CLK
clk => state~1.DATAIN
mosi => mosi_reg.DATAIN
sck => sck_reg.DATAIN
cs => cs_reg.DATAIN
rs_out <= data_reg[9].DB_MAX_OUTPUT_PORT_TYPE
en_out <= data_reg[8].DB_MAX_OUTPUT_PORT_TYPE
db_out[0] <= data_reg[0].DB_MAX_OUTPUT_PORT_TYPE
db_out[1] <= data_reg[1].DB_MAX_OUTPUT_PORT_TYPE
db_out[2] <= data_reg[2].DB_MAX_OUTPUT_PORT_TYPE
db_out[3] <= data_reg[3].DB_MAX_OUTPUT_PORT_TYPE
db_out[4] <= data_reg[4].DB_MAX_OUTPUT_PORT_TYPE
db_out[5] <= data_reg[5].DB_MAX_OUTPUT_PORT_TYPE
db_out[6] <= data_reg[6].DB_MAX_OUTPUT_PORT_TYPE
db_out[7] <= data_reg[7].DB_MAX_OUTPUT_PORT_TYPE
done <= done_reg.DB_MAX_OUTPUT_PORT_TYPE


|spi_lcd_main|lcd_driver:lcd_module
rst_n => db_reg[0].ACLR
rst_n => db_reg[1].ACLR
rst_n => db_reg[2].ACLR
rst_n => db_reg[3].ACLR
rst_n => db_reg[4].ACLR
rst_n => db_reg[5].ACLR
rst_n => db_reg[6].ACLR
rst_n => db_reg[7].ACLR
rst_n => en_reg.ACLR
rst_n => rs_reg.ACLR
clk => db_reg[0].CLK
clk => db_reg[1].CLK
clk => db_reg[2].CLK
clk => db_reg[3].CLK
clk => db_reg[4].CLK
clk => db_reg[5].CLK
clk => db_reg[6].CLK
clk => db_reg[7].CLK
clk => en_reg.CLK
clk => rs_reg.CLK
enable => rs_reg.ENA
enable => en_reg.ENA
enable => db_reg[7].ENA
enable => db_reg[6].ENA
enable => db_reg[5].ENA
enable => db_reg[4].ENA
enable => db_reg[3].ENA
enable => db_reg[2].ENA
enable => db_reg[1].ENA
enable => db_reg[0].ENA
rs_in => rs_reg.DATAIN
en_in => en_reg.DATAIN
db_in[0] => db_reg[0].DATAIN
db_in[1] => db_reg[1].DATAIN
db_in[2] => db_reg[2].DATAIN
db_in[3] => db_reg[3].DATAIN
db_in[4] => db_reg[4].DATAIN
db_in[5] => db_reg[5].DATAIN
db_in[6] => db_reg[6].DATAIN
db_in[7] => db_reg[7].DATAIN
rw <= <GND>
rs <= rs_reg.DB_MAX_OUTPUT_PORT_TYPE
en <= en_reg.DB_MAX_OUTPUT_PORT_TYPE
db[0] <= db_reg[0].DB_MAX_OUTPUT_PORT_TYPE
db[1] <= db_reg[1].DB_MAX_OUTPUT_PORT_TYPE
db[2] <= db_reg[2].DB_MAX_OUTPUT_PORT_TYPE
db[3] <= db_reg[3].DB_MAX_OUTPUT_PORT_TYPE
db[4] <= db_reg[4].DB_MAX_OUTPUT_PORT_TYPE
db[5] <= db_reg[5].DB_MAX_OUTPUT_PORT_TYPE
db[6] <= db_reg[6].DB_MAX_OUTPUT_PORT_TYPE
db[7] <= db_reg[7].DB_MAX_OUTPUT_PORT_TYPE


